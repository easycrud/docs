import{_ as a,c as s,o as e,a as l}from"./app.55f4f5e4.js";const F=JSON.parse('{"title":"Build Table Schema","description":"","frontmatter":{"outline":[2,3]},"headers":[{"level":2,"title":"standardize","slug":"standardize","link":"#standardize","children":[]},{"level":2,"title":"TableSchema","slug":"tableschema","link":"#tableschema","children":[{"level":3,"title":"fromPath","slug":"frompath","link":"#frompath","children":[]},{"level":3,"title":"fromFile","slug":"fromfile","link":"#fromfile","children":[]},{"level":3,"title":"from","slug":"from","link":"#from","children":[]}]}],"relativePath":"guide/build-table-schema.md","lastUpdated":1674012279000}'),n={name:"guide/build-table-schema.md"},o=l(`<h1 id="build-table-schema" tabindex="-1">Build Table Schema <a class="header-anchor" href="#build-table-schema" aria-hidden="true">#</a></h1><p>The toolkits package provides some helper functions to build and standardize the table schema.</p><div class="language-TypeScript"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">standardize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">schema</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UnstrictTableSchema</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">tableName</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TypeTableSchema</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TableSchema</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">fromPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">filePath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TypeTableSchema</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TypeTableSchema</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">fromFile</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">filePath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TypeTableSchema</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UnstrictTableSchema</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">tableName</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TypeTableSchema</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="standardize" tabindex="-1"><code>standardize</code> <a class="header-anchor" href="#standardize" aria-hidden="true">#</a></h2><p>Function for standardizing the table schema. It can be used in both Node.js and browser.</p><h2 id="tableschema" tabindex="-1"><code>TableSchema</code> <a class="header-anchor" href="#tableschema" aria-hidden="true">#</a></h2><p>The <code>TableSchema</code> class provides some helper functions to build the table schema.</p><h3 id="frompath" tabindex="-1"><code>fromPath</code> <a class="header-anchor" href="#frompath" aria-hidden="true">#</a></h3><p>Read the table schema from a file or directory. If the path is a directory, it will read all the JSON files in the directory and return an array of standard table schemas.</p><h3 id="fromfile" tabindex="-1"><code>fromFile</code> <a class="header-anchor" href="#fromfile" aria-hidden="true">#</a></h3><p>Read the table schema from a file.</p><h3 id="from" tabindex="-1"><code>from</code> <a class="header-anchor" href="#from" aria-hidden="true">#</a></h3><p>Build the standard table schema from a unstrict schema.</p>`,13),t=[o];function p(r,c,i,d,h,y){return e(),s("div",null,t)}const C=a(n,[["render",p]]);export{F as __pageData,C as default};
